name: Deployment pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches: [main]
    types: [opened, synchronize]

jobs:
  simple_deployment_pipeline:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '22'
      - name: 'Create env file'
        run: |
          touch .env
          echo PORT=${{secrets.PORT}} >> .env
          echo MONGODB_URI=${{ secrets.MONGODB_URI }} >> .env
          cat .env
      - name: Install dependecies
        run: npm install && npm run install:frontend
      - name: Check style
        run: npm run lint
      - name: Build project
        run: npm run build:ui
      - name: Run tests
        run: npm run test:frontend
      #   - name: e2e tests
      #     uses: cypress-io/github-action@v5
      #     with:
      #       command: npm run test:e2e
      #       start: npm start
      #       wait-on: http://localhost:3001
      - name: Trigger deployment
        id: deployment
        if: ${{ github.event_name == 'push' && !contains(join(toJson(github.event.commits.*.message)), '#skip') }}
        run: curl ${{secrets.RENDER_HOOK}}
      - name: Discord webhook (successful deployment)
        if: ${{ steps.deployment.outcome == 'success' }}
        uses: Ilshidur/action-discord@master
        with:
          args: 'üöÄ Deployment by ${{ github.actor }} successful! New version deployed to production (${{secrets.DEPLOYMENT_URL}}).'
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
      - name: Discord webhook (failed build)
        if: ${{ failure() }}
        uses: Ilshidur/action-discord@master
        with:
          args: '‚ùå Deployment failed! Commit https://github.com/${{ github.repository }}/commit/${{ github.sha }} by ${{ github.actor }} broke the build.'
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}

  tag_release:
    needs: [simple_deployment_pipeline]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v4
        with:
          node-version: '22'
      - name: Bump version and push tag
        if: ${{ github.event_name == 'push' && !contains(join(toJson(github.event.commits.*.message)), '#skip') }}
        uses: anothrNick/github-tag-action@1.73.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DEFAULT_BUMP: patch
          WITH_V: false
